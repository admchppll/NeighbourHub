@model Community.Models.Event
@using Community.Helpers
@using Microsoft.AspNet.Identity;
@using System.Configuration;

@{
    ViewBag.Title = "Details";
    ViewBag.SocialImage = Model.PictureURL;
    var userId = User.Identity.GetUserId();
}
@Html.AntiForgeryToken()

<div class="col-xs-12 col-md-7">
    <div class="col-xs-12">
        <h2>@Html.DisplayFor(model => model.Title)</h2>
    </div>
    <div class="col-xs-12">
        <div id="volunteerInfo" class="row">
            <div class="col-xs-12">
                @if (ViewBag.Distance != null)
                {
                    <b>Distance: </b>@ViewBag.Distance.ToString("0.00")
                    <span>miles</span>
                }
            </div>
            <div class="col-xs-12 col-sm-6">
                <b>Volunteers Needed:</b> @Html.DisplayFor(model => model.VolunteerQuantity)
            </div>
            <div class="col-xs-12 col-sm-6">
                <b>Points Per Volunteer:</b> @VolunteerHelper.GetVolunteerPointValue(Model.ID).ToString()
            </div>
        </div>
        <p id="longDescription">
            @Html.Raw(Model.LongDescription)
        </p>
        @if (Model.PictureURL != null && Model.PictureURL != "")
        {
            <div class="col-xs-12">
                <img src="@Url.Content(Model.PictureURL)" class="img-responsive" />
            </div>
        }
        <div class="row vertical-padding">
            <div class="col-xs-12">
                <label>Location</label>
            </div>
            <div class="col-xs-12 map">
                <iframe frameborder="0" style="border:0;"
                        src="@String.Format("https://www.google.com/maps/embed/v1/place?key={0}&q={1},{2}", @ConfigurationManager.AppSettings["GoogleMapsAPI"], @Model.Address.Lat, @Model.Address.Long)"
                        allowfullscreen></iframe>
            </div>
        </div>
    </div>
    <div class="col-xs-12">
        @if (VolunteerHelper.IsHost(userId, Model.ID) || UserHelper.IsAdmin(userId))
        {
            Html.RenderAction("Volunteers", "Volunteer", new { eventId = Model.ID });
        }
        @if (User.Identity.IsAuthenticated && VolunteerHelper.IsHost(userId, Model.ID) != true)
        {
            @Html.ActionLink("Report Event", "Event", "Report", new { eventId = Model.ID }, new { @class = "btn btn-danger" })
        }
    </div>
</div>
<div id="eventSidebar" class="col-xs-12 col-md-5 text-center">
    @if (VolunteerHelper.IsHost(userId, Model.ID) == false
        && VolunteerHelper.IsVolunteer(userId, Model.ID) == false
        && VolunteerHelper.IsWithdrawn(userId, Model.ID) == false
        && UserHelper.IsAdmin(userId) == false
        && User.Identity.IsAuthenticated)
    {
        <div class="col-xs-12">
            <div class="row">
                @if (VolunteerHelper.IsVolunteer(userId, Model.ID) == false)
                {
                    <button id="volunteerBtn" href="javascript:void();" onclick="volunteer(@Model.ID)" class="btn btn-primary">Volunteer</button>
                }
                else if (VolunteerHelper.IsWithdrawn(userId, Model.ID) == false)
                {
                    <button id="withdrawBtn" href="javascript:void();" onclick="withdraw(@Model.ID)" class="btn btn-danger">Withdraw</button>
                }
            </div>
            <div class="row">
                <div class="col-xs-12 alert hidden" id="volunteerMessage">
                    <strong id="volunteerMsgTitle"></strong>
                    <span id="volunteerMsgContent"></span>
                </div>
            </div>
        </div>
    }

    <div class="col-xs-12">
        <h3>Date Information</h3>
        <div class="col-xs-12">
            <p>
                @Model.Date.ToString("dddd d MMMM yyyy")
                <br />
                @{DateTime time = DateTime.Parse(Model.Time.ToString());}
                @time.ToString("h:mm tt")
                <br />
                @Html.DisplayFor(model => model.Length) Hours
                <br />
            </p>
        </div>

        @if (!String.IsNullOrEmpty(Model.DateInfo))
        {
            <div class="col-xs-12">
                <p>@Html.DisplayFor(model => model.DateInfo)</p>
            </div>
        }
    </div>
    @if (VolunteerHelper.IsApprovedVolunteer(userId, Model.ID) || UserHelper.IsAdmin(userId))
    {
        //Only provide address to approved volunteers
        <div class="col-xs-12">
            <h3>Address</h3>
            <div class="col-xs-12">
                <address>
                    @Html.DisplayFor(model => model.Address.Address1)<br />
                    @if (!String.IsNullOrEmpty(Model.Address.Address2))
                    {
                        @Html.DisplayFor(model => model.Address.Address2)<br />
                    }
                    @Html.DisplayFor(model => model.Address.City)<br />
                    @if (!String.IsNullOrEmpty(Model.Address.County))
                    {
                        @Html.DisplayFor(model => model.Address.County)<br />
                    }
                    @Html.DisplayFor(model => model.Address.Postcode)<br />
                </address>
            </div>
            @if (!String.IsNullOrEmpty(Model.Address.Notes))
            {
                <div class="col-xs-12">
                    <p>@Html.DisplayFor(model => model.Address.Notes)</p>
                </div>
            }
        </div>
    }
    <div class="col-xs-12 text-center">
        @{
            Html.RenderAction("Display", "EventTag", new { eventId = Model.ID });
        }
    </div>
</div>
<div class="col-xs-12 col-md-8 panel panel-default">
    @if (User.Identity.IsAuthenticated)
    {
        Html.RenderAction("EventPartial", "Profile", new { userId = Model.HostID });
    }
</div>
<div class="col-xs-12 event-links">
    @if (VolunteerHelper.IsHost(userId, Model.ID))
    {
        Html.ActionLink("Edit", "Edit", new { id = Model.ID }, new { @class = "btn btn-warning" });
    }
    <br />
    <a href="javascript:history.back()">Go Back</a>
</div>
@section Scripts {
    @Scripts.Render("~/Scripts/Volunteer.js")
    @Scripts.Render("~/Scripts/EventTag.js")
}

