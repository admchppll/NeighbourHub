@model PagedList.IPagedList<Community.Models.Transaction>
@using Microsoft.AspNet.Identity;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Transactions";
}

<h2>Transactions</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-center">
    <tr>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th>
            @Html.ActionLink("Sender", "Index", new { sortOrder = ViewBag.SenderSortParm })
        </th>
        <th>
            @Html.ActionLink("Receiver", "Index", new { sortOrder = ViewBag.ReceiveSortParm })
        </th>
        <th>
            Label
        </th>
        <th>
            @Html.ActionLink("Amount", "Index", new { sortOrder = ViewBag.AmountSortParm })
        </th>
        <th>
            Completed
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User1.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
            <td>
                @if (item.Gift == false)
                {
                    Html.DisplayFor(modelItem => item.Event.Title);
                }
                else {
                    <span>Gift</span>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @if (item.ParentTransaction != null && item.Complete == true)
                {
                    <span>Reversed</span>
                }
                else if (item.Cancelled == true)
                {
                    <span>Cancelled</span>
                }
                else {
                    @Html.DisplayFor(modelItem => item.Complete, "YesNo")
                }
            </td>
        </tr>
                    }

</table>
<div class="pagerSection">
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page = page, sortOrder = ViewBag.CurrentSort }))
</div>