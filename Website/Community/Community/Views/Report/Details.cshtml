@model Community.Models.Report
@using Community.Helpers;
@{
    ViewBag.Title = "Details";
}
<div class="row">
    <div class="col-xs-12 col-sm-6">
        <h2>Report</h2>
        <h4>#@Model.ID</h4>
    </div>

    @if (Model.ResolvedDate == null)
    {
        <div class="col-xs-12 col-sm-offset-2 col-sm-3 vertical-padding-2x btn-group-vertical">
            <button id="resolveBtn" class="btn btn-success">Resolve</button>
        </div>
        <input type="hidden" id="reportID" value="@Model.ID" />
    }
</div>
<hr />
<div class="row">
    <div class="col-xs-12 alert hidden" id="reportMessage">
        <strong id="reportMsgTitle"></strong>
        <span id="reportMsgContent"></span>
    </div>
</div>
<div class="col-xs-12">
    @if (Model.ReportedEvent != null)
    {
        <div class="col-xs-12 col-md-6 vertical-padding">
            <div class="col-xs-12 col-sm-8 vertical-sm-padding">
                <b>Reported Event:</b> @Html.DisplayFor(model => model.Event.Title)
                <input type="hidden" id="eventID" value="@Model.ReportedEvent" />
            </div>

            <div class="col-xs-12 col-sm-4 btn-group-vertical">
                <button class="btn btn-info" href="@Url.Action("Details", "Event", new { id = Model.ReportedEvent })">View Event</button>
                @if (Model.ResolvedDate == null && Model.Event.Suspended != true)
                {
                    <button id="suspendEventBtn" class="btn btn-danger">Suspend</button>
                }
            </div>
        </div>
    }
    <div class="col-xs-12 col-md-6 vertical-padding">
        <div class="col-xs-12 col-sm-8 vertical-sm-padding">
            <b>Reported User:</b> @Html.DisplayFor(model => model.User.UserName)
            <input type="hidden" id="userID" value="@Model.ReportedID" />
        </div>

        <div class="col-xs-12 col-sm-4 btn-group-vertical">
            <button class="btn btn-info" href="@Url.Action("Details", "Profile", new { id = ProfileHelper.CurrentProfileID(Model.ReportedID) })">View Profile</button>
            @if (Model.ResolvedDate == null && ProfileHelper.IsSuspended(Model.ReportedID) != true)
            {
                <button id="suspendUserBtn" class="btn btn-danger">Suspend</button>
            }
        </div>
    </div>
</div>
<div class="col-xs-12">
    <div class="col-xs-12 col-md-6 vertical-padding">
        <div class="col-xs-9 vertical-sm-padding">
            <b>Report Description</b>
        </div>

        <div class="col-xs-12">
            @Html.Raw(Model.Description)
        </div>
    </div>
</div>
<div class="col-xs-12">
    <div class="col-xs-12 col-md-6 vertical-padding">
        <div class="col-xs-12 col-sm-8 vertical-sm-padding">
            <b>Reported By:</b> @Html.DisplayFor(model => model.User1.UserName)
        </div>

        <div class="col-xs-12 col-sm-4 btn-group-vertical">
            <a class="btn btn-info" href="@Url.Action("Details", "Profile", new { id = ProfileHelper.CurrentProfileID(Model.UserID) })">View Profile</a>
        </div>
    </div>
</div>
@Html.AntiForgeryToken()
@{
    Html.RenderAction("AuditReport", "Audit", new { reportId = Model.ID });
    Html.RenderAction("Reply", "Report", new { reportID = Model.ID });
}

@section Scripts {
    @Scripts.Render("~/Scripts/Report.js")
}