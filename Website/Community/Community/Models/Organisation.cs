//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Community.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;
    public partial class Organisation
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Organisation()
        {
            this.UserOrganisations = new HashSet<UserOrganisation>();
            this.Points = new HashSet<Point>();
        }
    
        public short ID { get; set; }
        [Required]
        [StringLength(50, ErrorMessage = "Organisation name cannot be longer than 200 characters.")]
        public string Name { get; set; }
        [Required]
        [AllowHtml]
        public string Description { get; set; }
        public short Balance { get; set; }
        [Required]
        [EmailAddress]
        [StringLength(100, ErrorMessage = "Email cannot be longer than 100 characters.")]
        public string Email { get; set; }
        [RegularExpression("^[0-9 ]*$", ErrorMessage = "Phone number can only contain numbers and spaces.")]
        [StringLength(20, ErrorMessage = "Phone number cannot be longer than 20 digits.")]
        public string Phone { get; set; }
        [Required]
        [StringLength(50, ErrorMessage = "Address line 1 cannot be longer than 50 characters.")]
        public string Address1 { get; set; }
        [StringLength(50, ErrorMessage = "Address line 2 cannot be longer than 50 characters.")]
        public string Address2 { get; set; }
        [Required]
        [StringLength(50, ErrorMessage = "City cannot be longer than 50 characters.")]
        public string City { get; set; }
        [StringLength(50, ErrorMessage = "County cannot be longer than 50 characters.")]
        public string County { get; set; }
        [Required]
        [StringLength(50, ErrorMessage = "Country cannot be longer than 50 characters.")]
        public string Country { get; set; }
        [Required]
        [StringLength(15, ErrorMessage = "Postcode cannot be longer than 15 characters.")]
        public string Postcode { get; set; }
        [StringLength(200, ErrorMessage = "Facebook link cannot be longer than 200 characters.")]
        public string Facebook { get; set; }
        [StringLength(200, ErrorMessage = "Twitter link cannot be longer than 200 characters.")]
        public string Twitter { get; set; }
        [StringLength(200, ErrorMessage = "Google link cannot be longer than 200 characters.")]
        public string Google { get; set; }
        [StringLength(200, ErrorMessage = "Youtube link cannot be longer than 200 characters.")]
        public string Youtube { get; set; }
        [Required]
        [RegularExpression("^[0-9 ]*$", ErrorMessage = "Charity number can only contain numbers and spaces.")]
        [StringLength(50, ErrorMessage = "Charity number cannot be longer than 50 characters.")]
        public string CharityNumber { get; set; }
        [Required]
        public bool Approved { get; set; }
        [Required]
        public bool Active { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserOrganisation> UserOrganisations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Point> Points { get; set; }
    }
}
